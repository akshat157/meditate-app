{"version":3,"sources":["App.module.css","components/styled-slider.module.css","components/styled-dropdown.module.css","playSound.js","components/BackgroundImage.js","components/StyledIcon.js","components/StyledProgressBar.js","components/StyledSlider.js","constants.js","components/StyledCounter.js","components/StyledDropdown.js","App.js","serviceWorker.js","index.js","components/styled-counter.module.css"],"names":["module","exports","App","bg","activeBg","bg-overlay","main","player-options","middleWrap","audioSeek","resetIcon","playPauseBtn","playMode","pauseMode","playIcon","pauseIcon","timerWrap","timer","min","sec","volume-control","volume-slider","volume-icon","range","sliderBg","drop","activeOption","SoundComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSongPlaying","bind","assertThisInitialized","reset","state","position","loopCount","_ref","duration","setState","pos","timerMin","document","getElementById","timerSec","Math","floor","slice","innerHTML","concat","funcPerc","_this2","react_default","a","createElement","lib_default","url","playStatus","onPlaying","onFinishedPlaying","onStop","volume","Component","BackgroundImage","currentImage","getClassName","imgUrl","className","styles","Fragment","style","backgroundImage","StyledIcon","_props$alt","alt","handleOnClick","assign","onClick","progressBarStyle","root","path","stroke","strokeLinecap","transition","trail","text","fill","fontSize","StyledProgressBar","percentage","_ref$strokeWidth","strokeWidth","index_esm","StyledSlider","value","width","type","playButton","pauseButton","arrowButton","rainAudio","loudVolumeIcon","quietVolumeIcon","noVolumeIcon","rainImg","StyledCounter","setDuration","buttonWrap","increase","src","display","decrease","minutes","StyledDropdown","options","changeOption","map","option","i","toLowerCase","key","_onMouseMove","e","opacity","center_opacity","setTimeout","seekCurrentPosition","pbuttonUrl","volumeChange","event","Number","target","mute","volumeIcon","audioStatus","Sound","status","STOPPED","audioNames","audioUrl","bgImg","desiredTime","audioHovered","soundCompoRef","React","createRef","x","PAUSED","includes","PLAYING","current","audioName","fadeTransition","partialFadeTransition","activeAudio","replace","isStopped","onMouseMove","components_BackgroundImage","components_StyledCounter","timeSelect","components_StyledDropdown","audioSelect","onMouseEnter","handleAudioHover","onMouseLeave","components_StyledProgressBar","id","playPause","components_StyledIcon","objectSpread","transform","pointerEvents","toggleMute","components_StyledSlider","onChange","step","max","playSound","ref","moveSeek","desiredT","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76450bce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3ZVQu\",\"bg\":\"App_bg__3qJom\",\"activeBg\":\"App_activeBg__UHcyW\",\"bg-overlay\":\"App_bg-overlay__1ghKL\",\"main\":\"App_main__1SmVC\",\"player-options\":\"App_player-options__1elQ-\",\"middleWrap\":\"App_middleWrap__S690y\",\"audioSeek\":\"App_audioSeek__2zw2z\",\"resetIcon\":\"App_resetIcon__jfOWj\",\"playPauseBtn\":\"App_playPauseBtn__3zszW\",\"playMode\":\"App_playMode__1VWA0\",\"pauseMode\":\"App_pauseMode__3vkAI\",\"playIcon\":\"App_playIcon__3G7Hy\",\"pauseIcon\":\"App_pauseIcon__v8O1Z\",\"timerWrap\":\"App_timerWrap__2Ka1B\",\"timer\":\"App_timer__1GBkN\",\"min\":\"App_min__anNwV\",\"sec\":\"App_sec__GbWdJ\",\"volume-control\":\"App_volume-control__b5qAe\",\"volume-slider\":\"App_volume-slider__3e3_W\",\"volume-icon\":\"App_volume-icon__3rd0R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"styled-slider_range__1paRQ\",\"sliderBg\":\"styled-slider_sliderBg__2eBsp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drop\":\"styled-dropdown_drop__vWq3S\",\"activeOption\":\"styled-dropdown_activeOption__3_jqB\"};","import React, { Component } from 'react'\nimport Sound from 'react-sound'\n\nclass SoundComponent extends Component {\n  constructor(props) {\n    super(props)\n    this.handleSongPlaying = this.handleSongPlaying.bind(this)\n    this.reset = this.reset.bind(this)\n    this.state = {\n      position: 0,\n      loopCount: 0,\n    }\n  }\n\n  handleSongPlaying({ position, duration }) {\n    this.setState({ position })\n\n    var pos = position + this.state.loopCount * duration //loopCount to multiply for duration\n    const timerMin = document.getElementById('timer-min')\n    const timerSec = document.getElementById('timer-sec')\n    var min = Math.floor(pos / (1000 * 60))\n    var sec = Math.floor((pos / 1000) % 60)\n\n    min = ('0' + min).slice(-2)\n    sec = ('0' + sec).slice(-2)\n\n    timerMin.innerHTML = `${min}`\n    timerSec.innerHTML = `${sec}`\n    this.props.funcPerc(pos / 1000)\n  }\n\n  reset() {\n    this.setState({ position: 0 })\n  }\n\n  render() {\n    return (\n      <Sound\n        url={this.props.url}\n        playStatus={this.props.playStatus}\n        onPlaying={this.handleSongPlaying}\n        onFinishedPlaying={() =>\n          this.setState({ loopCount: this.state.loopCount + 1, position: 0 })\n        }\n        onStop={() => this.setState({ loopCount: 0, position: 0 })}\n        position={this.state.position}\n        volume={this.props.volume}\n      />\n    )\n  }\n}\n\nexport default SoundComponent\n","import React from 'react'\nimport styles from './../App.module.css'\n\nfunction BackgroundImage({ currentImage }) {\n  const getClassName = (imgUrl) => {\n    let className = styles.bg + ' '\n    if (currentImage === imgUrl) {\n      className += styles.activeBg\n    }\n    return className\n  }\n\n  return (\n    <>\n      <div\n        className={getClassName('img/rain.jpg')}\n        style={{ backgroundImage: `url(\"img/rain.jpg\")` }}\n      />\n      <div\n        className={getClassName('img/forest.jpg')}\n        style={{ backgroundImage: `url(img/forest.jpg)` }}\n      />\n      <div\n        className={getClassName('img/park.jpg')}\n        style={{ backgroundImage: `url(img/park.jpg)` }}\n      />\n      <div\n        className={getClassName('img/stream.jpg')}\n        style={{ backgroundImage: `url(img/stream.jpg)` }}\n      />\n      <div\n        className={getClassName('img/waves.jpg')}\n        style={{ backgroundImage: `url(img/waves.jpg)` }}\n      />\n    </>\n  )\n}\n\nexport default BackgroundImage\n","import React from 'react'\n\nfunction StyledIcon(props) {\n  const { alt = '', handleOnClick } = props\n  return <img alt={alt} onClick={() => handleOnClick()} {...props} />\n}\n\nexport default StyledIcon\n","import React from 'react'\nimport CircularProgressbar from 'react-circular-progressbar'\n\nconst progressBarStyle = {\n  // Customize the root svg element\n  root: {},\n  // Customize the path, i.e. the part that's \"complete\"\n  path: {\n    // Tweak path color:\n    stroke: '#0086ffcc',\n    // Tweak path to use flat or rounded ends:\n    strokeLinecap: 'butt',\n    // Tweak transition animation:\n    transition: 'stroke-dashoffset 0.5s ease 0s',\n  },\n  // Customize the circle behind the path\n  trail: {\n    // Tweak the trail color:\n    stroke: '#ffffffcc',\n  },\n  // Customize the text\n  text: {\n    // Tweak text color:\n    fill: '#f88',\n    // Tweak text size:\n    fontSize: '30px',\n  },\n}\n\nfunction StyledProgressBar({ percentage, text, strokeWidth = 3 }) {\n  return (\n    <CircularProgressbar\n      percentage={percentage}\n      text={text}\n      // Path width must be customized with strokeWidth,\n      // since it informs dimension calculations.\n      strokeWidth={strokeWidth}\n      // You can override styles either by specifying this \"styles\" prop,\n      // or by overriding the default CSS here:\n      // https://github.com/iqnivek/react-circular-progressbar/blob/master/src/styles.css\n      styles={progressBarStyle}\n    />\n  )\n}\nexport default StyledProgressBar\n","import React from 'react'\nimport style from './styled-slider.module.css'\n\nfunction StyledSlider(props) {\n  const { value } = props\n\n  return (\n    <div className={style.range}>\n      <div className={style.sliderBg} style={{ width: `${value}%` }}></div>\n      <input type=\"range\" {...props} />\n    </div>\n  )\n}\n\nexport default StyledSlider\n","export const playButton = 'svg/play.svg'\nexport const pauseButton = 'svg/pause.svg'\nexport const resetButton = 'svg/reset.svg'\nexport const arrowButton = 'svg/arrow.svg'\n\nexport const rainAudio = 'audio/rain.mp3'\nexport const forestAudio = 'audio/forest.mp3'\nexport const parkAudio = 'audio/park.mp3'\nexport const streamAudio = 'audio/stream.mp3'\nexport const wavesAudio = 'audio/waves.mp3'\n\nexport const loudVolumeIcon = 'svg/volume-2.svg'\nexport const quietVolumeIcon = 'svg/volume-1.svg'\nexport const noVolumeIcon = 'svg/volume-x.svg'\n\nexport const rainImg = 'img/rain.jpg'\nexport const forestImg = 'img/forest.jpg'\nexport const parkImg = 'img/park.jpg'\nexport const streamImg = 'img/stream.jpg'\nexport const wavesImg = 'img/waves.jpg'\n","import React from 'react'\nimport { arrowButton } from '../constants'\nimport styles from './styled-counter.module.css'\n\nfunction StyledCounter({ duration, setDuration, style }) {\n  // unit of \"duration\" in minutes\n\n  const incr = () => {\n    if (!(duration + 1 > 120)) setDuration(duration + 1)\n    if ((duration + 1 < 15)) setDuration(duration + 1)\n    if ((duration + 1 > 15 && duration + 1 < 45)) setDuration(duration + 5)\n    if ((duration + 1 > 45 && duration + 1 < 120)) setDuration(duration + 15)\n  }\n\n  const decr = () => {\n    if ((duration - 1 <= 0)) {\n        setDuration(1)\n    } else {\n        if (!(duration - 1 < 1)) setDuration(duration - 1)\n        if ((duration - 1 < 15)) setDuration(duration - 1)\n        if ((duration - 1 > 15 && duration - 1 < 45)) setDuration(duration - 5)\n        if ((duration - 1 > 45 && duration - 1 < 120)) setDuration(duration - 15)\n    }\n  }\n\n  return (\n    <div className={styles.root} style={style}>\n      <div className={styles.main}>\n        <span className={styles.buttonWrap}>\n          <img\n            className={styles.increase}\n            src={arrowButton}\n            alt=\"inc\"\n            onClick={incr}\n          />\n        </span>\n        <input className={styles.display} type=\"number\" value={duration} />\n        <span className={styles.buttonWrap}>\n          <img\n            className={styles.decrease}\n            src={arrowButton}\n            alt=\"dec\"\n            onClick={decr}\n          />\n        </span>\n      </div>\n      <p className={styles.minutes}>Minutes</p>\n    </div>\n  )\n}\n\nexport default StyledCounter\n","import React from 'react'\nimport styles from './styled-dropdown.module.css'\n\nfunction StyledDropdown(props) {\n  const { options, activeOption, changeOption } = props\n  return (\n    <li className={styles.drop} {...props}>\n      {activeOption}\n      <ul>\n        {options.map((option, i) => {\n          option = option.toLowerCase()\n          return (\n            <li\n              key={option + i}\n              className={\n                activeOption === option.toLowerCase() && styles.activeOption\n              }\n              onClick={() => changeOption(option)}\n            >\n              {option}\n            </li>\n          )\n        })}\n      </ul>\n    </li>\n  )\n}\n\nexport default StyledDropdown\n","import React, { Component } from 'react'\nimport Sound from 'react-sound'\nimport 'react-circular-progressbar/dist/styles.css'\nimport styles from './App.module.css'\n\n// import logo from './logo.svg';\nimport SoundComponent from './playSound'\nimport {\n  StyledProgressBar,\n  StyledSlider,\n  BackgroundImage,\n  StyledIcon,\n  StyledCounter,\n  StyledDropdown,\n} from './components'\n\nimport {\n  playButton,\n  pauseButton,\n  rainAudio,\n  forestAudio,\n  parkAudio,\n  streamAudio,\n  wavesAudio,\n  loudVolumeIcon,\n  quietVolumeIcon,\n  noVolumeIcon,\n  rainImg,\n  forestImg,\n  parkImg,\n  wavesImg,\n  streamImg,\n  resetButton,\n} from './constants'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      pbuttonUrl: playButton,\n      audioStatus: Sound.status.STOPPED,\n      audioNames: ['rain', 'forest', 'park', 'stream', 'waves'],\n      seekCurrentPosition: 0,\n      audioUrl: rainAudio, // Default\n      bgImg: rainImg,\n      desiredTime: 120, // Default\n      audioHovered: false,\n      volume: 100, // Default\n      mute: false, // Default\n      volumeIcon: loudVolumeIcon,\n      opacity: 1,\n      transition: '',\n      center_opacity: 1,\n    }\n    this.soundCompoRef = React.createRef()\n  }\n\n  timeSelect(x) {\n    this.setState({\n      desiredTime: x.duration,\n    })\n  }\n\n  playPause() {\n    if (\n      [Sound.status.STOPPED, Sound.status.PAUSED].includes(\n        this.state.audioStatus\n      )\n    ) {\n      this.setState({\n        pbuttonUrl: pauseButton,\n        audioStatus: Sound.status.PLAYING,\n      })\n    } else if (this.state.audioStatus === Sound.status.PLAYING) {\n      this.setState({\n        pbuttonUrl: playButton,\n        audioStatus: Sound.status.PAUSED,\n      })\n    }\n\n    if (this.state.pbuttonUrl === playButton) {\n      this.setState({\n        opacity: 0,\n        center_opacity: 0.6,\n        transition: 'opacity 10s ease-out',\n      })\n    } else {\n      this.setState({\n        opacity: 1,\n        center_opacity: 1,\n        transition: 'opacity 0s',\n      })\n    }\n  }\n\n  reset() {\n    this.soundCompoRef.current && this.soundCompoRef.current.reset()\n\n    this.setState({\n      seekCurrentPosition: 0,\n      pbuttonUrl: playButton,\n      audioStatus: Sound.status.STOPPED,\n    })\n  }\n\n  _onMouseMove = (e) => {\n    this.setState({\n      opacity: 1,\n      transition: 'opacity 0s',\n      center_opacity: 1,\n    })\n    setTimeout(() => {\n      if (\n        this.state.seekCurrentPosition < 100 &&\n        this.state.pbuttonUrl === pauseButton\n      ) {\n        this.setState({\n          opacity: 0,\n          transition: 'opacity 10s ease-out',\n          center_opacity: 0.6,\n        })\n      }\n    }, 3000)\n  }\n\n  audioSelect(audioName) {\n    switch (audioName) {\n      case this.state.audioNames[1]:\n        this.setState({\n          audioUrl: forestAudio,\n          bgImg: forestImg,\n        })\n        break\n\n      case this.state.audioNames[2]:\n        this.setState({\n          audioUrl: parkAudio,\n          bgImg: parkImg,\n        })\n        break\n\n      case this.state.audioNames[3]:\n        this.setState({\n          audioUrl: streamAudio,\n          bgImg: streamImg,\n        })\n        break\n\n      case this.state.audioNames[4]:\n        this.setState({\n          audioUrl: wavesAudio,\n          bgImg: wavesImg,\n        })\n        break\n\n      default:\n        this.setState({\n          audioUrl: rainAudio,\n          bgImg: rainImg,\n        })\n        break\n    }\n  }\n\n  moveSeek(pos) {\n    this.setState({\n      seekCurrentPosition: (pos / this.state.desiredTime) * 100,\n    })\n\n    if (Math.floor(pos) === this.state.desiredTime) {\n      this.setState({\n        pbuttonUrl: playButton,\n        audioStatus: Sound.status.STOPPED,\n      })\n    }\n  }\n\n  handleAudioHover() {\n    this.setState({\n      audioHovered: !this.state.audioHovered,\n    })\n  }\n\n  volumeChange = (event) => {\n    const value = Number(event.target.value)\n    this.setState({\n      volume: this.state.mute ? this.state.volume : value,\n      volumeIcon:\n        this.state.mute || value === 0\n          ? noVolumeIcon\n          : value <= 50\n          ? quietVolumeIcon\n          : loudVolumeIcon,\n    })\n  }\n\n  toggleMute() {\n    this.setState({\n      volumeIcon: !this.state.mute\n        ? noVolumeIcon\n        : this.state.volume <= 50\n        ? quietVolumeIcon\n        : loudVolumeIcon,\n      mute: !this.state.mute,\n    })\n  }\n\n  render() {\n    const fadeTransition = {\n      opacity: this.state.opacity,\n      transition: this.state.transition,\n    }\n\n    const partialFadeTransition = {\n      opacity: this.state.center_opacity,\n      transition: this.state.transition,\n    }\n\n    const activeAudio = this.state.audioUrl\n      .replace('audio/', '')\n      .replace('.mp3', '')\n      .toLowerCase()\n\n    const isStopped = ![Sound.status.PLAYING, Sound.status.PAUSED].includes(\n      this.state.audioStatus\n    )\n    return (\n      <div className={styles.App} onMouseMove={this._onMouseMove}>\n        <div className={styles['bg-overlay']}></div>\n        <BackgroundImage currentImage={this.state.bgImg} />\n\n        <main className={styles.main}>\n          <div className={styles['player-options']}>\n            <StyledCounter\n              setDuration={(duration) => {\n                // unit of \"duration\" is minutes\n                this.timeSelect({ duration: duration * 60 }) // convert minutes to seconds\n              }}\n              duration={this.state.desiredTime / 60} // unit of \"desiredTime\" is seconds, convert seconds to minutes\n              style={fadeTransition}\n            />\n            <StyledDropdown\n              options={this.state.audioNames}\n              style={!this.state.audioHovered ? fadeTransition : null}\n              activeOption={activeAudio}\n              changeOption={(audioName) => {\n                this.audioSelect(audioName)\n              }}\n              onMouseEnter={this.handleAudioHover.bind(this)}\n              onMouseLeave={this.handleAudioHover.bind(this)}\n            />\n          </div>\n\n          <div className={styles.middleWrap}>\n            <div className={styles.audioSeek} style={partialFadeTransition}>\n              <StyledProgressBar\n                id=\"seek\"\n                percentage={this.state.seekCurrentPosition}\n              />\n              <div\n                style={partialFadeTransition}\n                className={\n                  this.state.pbuttonUrl === playButton\n                    ? `${styles.playPauseBtn} ${styles.pauseMode}`\n                    : `${styles.playPauseBtn} ${styles.playMode}`\n                }\n                alt=\"Play\"\n                onClick={this.playPause.bind(this)}\n              >\n                <img className={styles.pauseIcon} src={pauseButton} alt=\"\" />\n                <img className={styles.playIcon} src={playButton} alt=\"\" />\n              </div>\n            </div>\n\n            <div className={styles.timerWrap}>\n              <StyledIcon\n                className={styles.resetIcon}\n                src={resetButton}\n                alt=\"reset\"\n                style={{\n                  ...partialFadeTransition,\n                  opacity: isStopped ? 0.4 : this.state.center_opacity,\n                  transform: isStopped && 'none',\n                  pointerEvents: isStopped && 'none',\n                }}\n                handleOnClick={this.reset.bind(this)}\n              />\n              <div className={styles.timer} style={partialFadeTransition}>\n                <span id=\"timer-min\" className={styles.min}>\n                  00\n                </span>\n                <span> : </span>\n                <span id=\"timer-sec\" className={styles.sec}>\n                  00\n                </span>\n              </div>\n            </div>\n          </div>\n          <div\n            className={styles['volume-control']}\n            style={{\n              fadeTransition,\n            }}\n          >\n            <StyledIcon\n              className={styles['volume-icon']}\n              src={this.state.volumeIcon}\n              handleOnClick={this.toggleMute.bind(this)}\n              style={fadeTransition}\n            />\n            &nbsp;\n            <div className={styles['volume-slider']} style={fadeTransition}>\n              <StyledSlider\n                id=\"slider\"\n                onChange={this.volumeChange}\n                step={1}\n                min={0}\n                max={100}\n                value={this.state.mute ? 0 : this.state.volume}\n              />\n            </div>\n          </div>\n          <SoundComponent\n            ref={this.soundCompoRef}\n            playStatus={this.state.audioStatus}\n            url={this.state.audioUrl}\n            funcPerc={this.moveSeek.bind(this)}\n            desiredT={this.state.desiredTime}\n            volume={this.state.mute ? 0 : this.state.volume}\n          />\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styled-counter_root__278-D\",\"main\":\"styled-counter_main__3oSgM\",\"buttonWrap\":\"styled-counter_buttonWrap__2U2GB\",\"increase\":\"styled-counter_increase__2r1jk\",\"decrease\":\"styled-counter_decrease__2ES7e\",\"display\":\"styled-counter_display__8m1qu\",\"minutes\":\"styled-counter_minutes__1cX2m\"};"],"sourceRoot":""}